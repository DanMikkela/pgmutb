@model Cat_Show_Results.Models.RoleViewModel

@{
    ViewData["Title"] = "Create";
}

<h4>Create Role</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label">Role Name</label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <p>Users that have this role</p>
            @for (int i = 0; i < Model.Users.Count(); i++)
            {
                <div>
                    <div class="form-group d-inline-block align-top">
                        <label asp-for=@Model.Users[i].HasRole class="control-label">Has Role</label>
                        <input type="checkbox" asp-for=@Model.Users[i].HasRole  />
                        <span asp-validation-for=@Model.Users[i].HasRole class="text-danger"></span>
                    </div>
                    <div class="form-group d-inline-block align-top">
@*                        <label asp-for=@Model.Users[i].UserName class="control-label">User</label>
*@                        <input hidden asp-for=@Model.Users[i].UserName />
                        @Model.Users[i].UserName
                        <span asp-validation-for=@Model.Users[i].UserName class="text-danger"></span>
                    </div>
                </div>
            }
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
