@model Cat_Show_Results.Models.RoleViewModel

@{
    ViewData["Title"] = "Edit Role";
}


<h4>Attach User Role</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
        <table>
            @for (int i = 0; i < Model.Users.Count(); i++)
            {
            <div>
@*                <div class="form-group d-inline-block align-top">*@
                <div class="form-group d-inline-block align-top">
                    Has Role
                    <input type="checkbox" asp-for=@Model.Users[i].HasRole  class="control-label"/>
                    <span asp-validation-for=@Model.Users[i].HasRole class="text-danger"></span>
                </div>
                <div class="form-group d-inline-block align-top">
                    <label @Model.Users[i].UserName class="control-label"></label>
                    @Model.Users[i].UserName
                    <input hidden asp-for=@Model.Users[i].UserName />
                </div>
            </div>
            }
        </table>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
